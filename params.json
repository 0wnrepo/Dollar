{"name":"Dollar.swift","tagline":"A functional tool-belt for Swift Language","body":"### Array Methods\r\n\r\n* $.first\r\n* $.compact\r\n* $.contains\r\n* $.difference\r\n* $.findIndex\r\n* $.findLastIndex\r\n* $.flatten\r\n* $.indexOf\r\n* $.initial\r\n* $.intersection\r\n* $.last\r\n* $.lastIndexOf\r\n* $.rest\r\n* $.noop\r\n* $.pull\r\n* $.range\r\n* $.remove\r\n* $.sortedIndex\r\n* $.union\r\n* $.uniq\r\n* $.without\r\n* $.xor\r\n* $.zip\r\n* $.zipObject\r\n\r\n### Usage\r\n\r\n`$.first([1, 2, 3, 4]) as Double == 1`\r\n\r\n`$.first([]) == nil`\r\n\r\n`$.noop() == nil`\r\n\r\n`$.compact([3, nil, 4, 5]) as NSObject[] == [3, 4, 5]`\r\n\r\n`$.compact([nil, nil]) as NSObject[] == []`\r\n\r\n`$.flatten([[3], 4, 5]) as Int[] == [3, 4, 5]`\r\n\r\n`$.flatten([[3], \"Hello\", 5]) as NSObject[] == [3, \"Hello\", 5]`\r\n\r\n`$.flatten([[[3], 4], 5]) as Int[] == [3, 4, 5]`\r\n\r\n`$.indexOf([\"A\", \"B\", \"C\"], value: \"B\") == 1`\r\n\r\n`$.indexOf([3, 4, 5], value: 5) == 2`\r\n\r\n`$.indexOf([3, 4, 5], value: 3) == 0`\r\n\r\n`$.indexOf([3, 4, 5], value: 2) == nil`\r\n\r\n`$.initial([3, 4, 5]) as Int[] == [3, 4]`\r\n\r\n`$.initial([3, 4, 5], numElements: 2) as Int[] == [3]    `\r\n\r\n`$.rest([3, 4, 5]) as Int[] == [4, 5]`\r\n\r\n`$.rest([3, 4, 5], numElements: 2) as Int[] == [5]`\r\n\r\n`$.last([3, 4, 5]) as Int == 5`\r\n\r\n```\r\nlet arr = [[\"age\": 36], [\"age\": 40], [\"age\": 1]]\r\nlet result = $.findIndex(arr) { $0[\"age\"] < 20 }\r\nresult == 2\r\n```\r\n\r\n```\r\nlet arr = [[\"age\": 36], [\"age\": 40], [\"age\": 1]]\r\nlet result = $.findLastIndex(arr) { $0[\"age\"] > 30 }\r\nresult == 1\r\n```\r\n\r\n`$.indexOf([1, 2, 3, 1, 2, 3], value: 2) == 1`\r\n\r\n`$.lastIndexOf([1, 2, 3, 1, 2, 3], value: 2) == 4`\r\n\r\n`$.contains([1, 2, 3, 1, 2, 3], value: 2) == true`\r\n\r\n`$.contains([1, 2, 3, 1, 2, 3], value: 10) == false``\r\n\r\n`$.range(4) as Int[] == [0, 1, 2, 3]`\r\n\r\n`$.range(1, endVal: 5) as Int[] == [1, 2, 3, 4]`\r\n\r\n`$.range(0, endVal: 20, incrementBy: 5) as Int[] == [0, 5, 10, 15]`\r\n\r\n```\r\nlet result = $.remove([1, 2, 3, 4, 5, 6], iterator: { $0 as Int == 2 || $0 as Int == 3 })\r\nresult as Int[] == [1, 4, 5, 6]\r\n```\r\n\r\n`$.sortedIndex([3, 4, 6, 10], value: 5) as Int == 2`\r\n\r\n`$.sortedIndex([10, 20, 30, 50], value: 40) as Int == 3`\r\n\r\n`$.without([3, 4, 5, 3, 5], values: 3, 5) as Int[] == [4]`\r\n\r\n`$.without([3, 4, 5, 3, 5], values: 4) as Int[] == [3, 5, 3, 5]`\r\n\r\n`$.without([3, 4, 5, 3, 5], values: 3, 4, 5) as Int[] == []`\r\n\r\n`$.pull([3, 4, 5, 3, 5], values: 3, 5) as Int[] == [4]`\r\n\r\n`$.pull([3, 4, 5, 3, 5], values: 4) as Int[] == [3, 5, 3, 5]`\r\n\r\n`$.pull([3, 4, 5, 3, 5], values: 3, 4, 5) as Int[] == []`\r\n\r\n`$.zip([\"fred\", \"barney\"], [30, 40], [true, false]) as NSObject[] == [[\"fred\", 30, true], [\"barney\", 40, false]]`\r\n\r\n`$.zipObject([\"fred\", \"barney\"], values: [30, 40]) as Dictionary<String, Int> == [\"fred\": 30, \"barney\": 40]`\r\n\r\n`$.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]) as Int[] == [1, 2]`\r\n\r\n`$.difference([1, 2, 3, 4, 5], [5, 2, 10]) as Int[] == [1, 3, 4]`\r\n\r\n`$.uniq([1, 2, 1, 3, 1]) as Int[] == [1, 2, 3]`\r\n\r\n`$.union([1, 2, 3], [5, 2, 1, 4], [2, 1]) as Int[] == [1, 2, 3, 4, 5]`\r\n\r\n`$.xor([1, 2, 3], [5, 2, 1, 4]) as Int[] == [3, 4, 5]`\r\n\r\n### Contributing\r\n\r\nIf you are interested in contributing \r\n\r\n1. Please fork this project\r\n2. Implement new methods or changes in the `Dollar.swift` file in the Classes folder\r\n3. Write tests in `DollarTests.swift` file in the DollarTests folder \r\n4. Submit a pull request.\r\n\r\n### Roadmap\r\n\r\nMore functions will be added and then ability to chain operations and lazily evaluation of chained expressions.\r\n","google":"UA-51727665-1","note":"Don't delete this file! It's used internally to help with page regeneration."}